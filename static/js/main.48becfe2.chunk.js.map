{"version":3,"sources":["components/navbar/Navbar.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/test/Test.js","components/pages/Notfound.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","menuToggle","navMenuToggle","setState","this","props","home","listContacts","about","brand","className","style","color","to","textDecoration","onClick","Component","Context","React","createContext","reducer","action","type","items","filter","item","id","payload","Provider","name","email","phone","dispatch","axios","get","then","response","data","value","children","Consumer","Contact","contactToggle","onClickToggle","onDeleteClick","delete","content","class","bind","float","marginRight","Contacts","Fragment","map","key","AddContact","handleChange","e","target","handleSubmit","preventDefault","newContact","post","history","push","onSubmit","htmlFor","onChange","placeholder","required","EditContact","match","params","About","Test","title","userId","fetch","json","Notfound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48becfe2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../../css/Navbar.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  state = { menuToggle: false };\r\n  navMenuToggle = () => {\r\n    this.setState({ menuToggle: !this.state.menuToggle });\r\n  };\r\n  render() {\r\n    const { home, listContacts, about, brand } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"navbar-des\">\r\n          <div className=\"navbar-des-one\">\r\n            <h2 className=\"brand\">\r\n              <span style={{ color: \"gold\" }}>{brand} </span>\r\n            </h2>\r\n          </div>\r\n          <div className=\"navbar-des-two\">\r\n            <ul className=\"navbar-des-ul\">\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {home}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/contact\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {listContacts}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"navbar-des-li\">\r\n                <div className=\"navbar-des-a\">\r\n                  {\" \"}\r\n                  <Link\r\n                    to=\"/about\"\r\n                    style={{ textDecoration: \"none\", color: \"white\" }}\r\n                  >\r\n                    {about}\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"navbar-mob\">\r\n          <div className=\"navbar-mob-one\">\r\n            <h2>\r\n              <span style={{ color: \"gold\" }}>{brand} </span>\r\n              <i\r\n                onClick={this.navMenuToggle}\r\n                className=\"fas fa-bars hamburger\"\r\n              />\r\n            </h2>\r\n          </div>\r\n          <div className=\"navbar-mob-two\">\r\n            {this.state.menuToggle ? (\r\n              <ul className=\"navbar-mob-ul\">\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {home}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/contact\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {listContacts}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n                <li className=\"navbar-mob-li\">\r\n                  <div className=\"navbar-mob-a\">\r\n                    <Link\r\n                      to=\"/about\"\r\n                      style={{ textDecoration: \"none\", color: \"white\" }}\r\n                    >\r\n                      {about}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n\r\nNavbar.propTypes = {\r\n  home: PropTypes.string.isRequired,\r\n  listTodos: PropTypes.string.isRequired,\r\n  contacts: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item) => item.id !== action.payload)\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    items: [{ id: 1, name: \"emma\", email: \"akwe@yahoo.com\", phone: \"222-222\" }],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => this.setState({ items: response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/Contact.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contact extends Component {\r\n  state = { contactToggle: true };\r\n  onClickToggle = () => {\r\n    this.setState({ contactToggle: !this.state.contactToggle });\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`http://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((response) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.content;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <h1 className=\"contact-h1\">\r\n                name: {name}{\" \"}\r\n                <i onClick={this.onClickToggle} class=\"fas fa-caret-down\" />\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  class=\"fas fa-trash-alt\"\r\n                  style={{ float: \"right\", color: \"red\" }}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    style={{\r\n                      float: \"right\",\r\n                      marginRight: \"0.5rem\",\r\n                      color: \"blue\"\r\n                    }}\r\n                    class=\"fas fa-user-edit\"\r\n                  />\r\n                </Link>\r\n              </h1>\r\n              {this.state.contactToggle ? (\r\n                <ul className=\"container-inner\">\r\n                  <li className=\"container-inner-li\">{email}</li>\r\n                  <li className=\"container-inner-li\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\nContact.propTypes = {\r\n  content: PropTypes.object.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { items } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {items.map((content) => (\r\n                <Contact key={content.id} content={content} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/AddContact.css\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = { name: \"\", email: \"\", phone: \"\" };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    axios\r\n      .post(\"http://jsonplaceholder.typicode.com/users/\", newContact)\r\n      .then((response) =>\r\n        dispatch({ type: \"ADD_CONTACT\", payload: response.data })\r\n      );\r\n\r\n    // clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container-form\">\r\n              <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                <h1 className=\"add-contact\">Add Contacts</h1>\r\n                <label htmlFor=\"\">Name:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter name\"\r\n                  required\r\n                />\r\n                <br />\r\n                <label htmlFor=\"\">Email:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                />\r\n                <br />\r\n                <label htmlFor=\"\">Phone no:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter phone\"\r\n                  required\r\n                />\r\n                <br />\r\n                <button className=\"btn\" type=\"submit\">\r\n                  Add contact\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../Context\";\r\nimport \"../../css/AddContact.css\";\r\n\r\nclass EditContact extends Component {\r\n  state = { name: \"\", email: \"\", phone: \"\" };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    axios\r\n      .get(`http://jsonplaceholder.typicode.com/users${id}`)\r\n      .then((response) =>\r\n        this.setState({\r\n          name: response.data,\r\n          email: response.email,\r\n          phone: response.data\r\n        })\r\n      );\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\r\n    this.props.history.push(\"/contact\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container-form\">\r\n              <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                <h1 className=\"add-contact\">Edit Contacts</h1>\r\n                <label htmlFor=\"\">Name:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter name\"\r\n                  required\r\n                />\r\n                <br />\r\n                <label htmlFor=\"\">Email:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter email\"\r\n                  required\r\n                />\r\n                <br />\r\n                <label htmlFor=\"\">Phone no:</label>\r\n                <input\r\n                  className=\"input-inner\"\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Enter phone\"\r\n                  required\r\n                />\r\n                <br />\r\n                <button className=\"btn\" type=\"submit\">\r\n                  Update contact\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>this is a contact management app</h1>\r\n      <p>\r\n        it get contacts info from a fake rest api know as jsonplaceholder and\r\n        contacts can be deleted or added to the list{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    userId: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState({ title: data.title, userId: data.userId })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, userId } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <h1>{userId}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nfunction Notfound() {\r\n  return (\r\n    <div>\r\n      <h1>this page does not exist</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport Test from \"./components/test/Test\";\nimport Notfound from \"./components/pages/Notfound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        {\" \"}\n        <div className=\"App\">\n          <Navbar\n            brand=\"brand\"\n            home=\"addContact\"\n            listContacts=\"listContacts\"\n            about=\"About\"\n          />\n          <Switch>\n            <Route exact path=\"/\" component={AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n            <Route exact path=\"/contact\" component={Contacts} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/test\" component={Test} />\n            <Route component={Notfound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}